# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

## Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

before_all do
  ensure_bundle_exec
  setup_circle_ci
end
default_platform(:android)
$gradle_flags = '--no-daemon --max-workers=2 -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+UnlockExperimentalVMOptions -XX:+HeapDumpOnOutOfMemoryError"'
## Retrieve version of my app in package.json (React Native case)
$package = load_json(json_path: "../package.json")
$slack_url = "https://hooks.slack.com/services/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"
$symbols_zip = "app/build/symbols.zip"

desc "Increments internal build number tracking (different than version)"
lane :bump_and_commit_versions do
  ## Bump android.defaultConfig.versionCode
  # bump_build_number
  increment_version_code
  commit_android_version_bump(
    app_folder_name: "app",
    message: "[fastlane:android] Version Bump",
  )
end

desc "Build debug android configuration"
lane :build_debug do
  gradle(task: "clean assembleDebug")
end

lane :e2e_debug do
  Dir.chdir "../.." do ## Navigate to the root of the project where the Detox files are placed
    sh("npm i -g detox-cli@#{$package["devDependencies"]["detox"]}")
    sh("detox build --configuration android.emu.debug")
    sh("detox test --configuration android.emu.debug --cleanup")
  end
end

lane :e2e_release do
  Dir.chdir "../.." do ## Navigate to the root of the project where the Detox files are placed
    # sh("npm i -g detox-cli@#{package['devDependencies']['detox']}")
    sh("detox build --configuration android.emu.release")
    sh("detox test --configuration android.emu.release --cleanup")
  end
end

desc "Build release android configuration"
lane :build_android_release_bundle do
  gradle(
    task: "bundle",
    build_type: "Release",
    properties: {
      "vname" => $package["version"],
    },
    flags: $gradle_flags,
  )
end

desc "Builds a release and pushes to beta track on play store"
lane :beta do
  zip(
    path: "app/build/outputs/",
    output_path: $symbols_zip,
  )

  bump_and_commit_versions

  # Do the bundle of the application
  build_android_release_bundle

  ## Upload Android App Bundle to PlayStore like Internal testing Release
  upload_to_play_store(
    track: "internal",
    skip_upload_apk: true,
    version_name: $package["version"],
    mapping: $symbols_zip,
  )
end

lane :generate_new_icons do
  ## Generates the app icons - splash screen icons are handled by bootsplash (`yarn bootsplash`)
  android_appicon(
    appicon_image_file: "fastlane/metadata/app_icon.png",
    appicon_icon_types: [:launcher],
    appicon_path: "app/src/main/res/mipmap",
    generate_rounded: true,
    appicon_filename: "ic_launcher_foreground",
  )
  android_appicon(
    appicon_image_file: "fastlane/metadata/app_icon.png",
    appicon_icon_types: [:notification],
    appicon_path: "app/src/main/res/drawable",
    generate_rounded: true,
  )
end

desc "Build Release configuration and Google Play Store"
lane :playstore do
  ## Clean build folder
  gradle(
    task: "clean",
  )

  generate_new_icons

  ## Bump android.defaultConfig.versionCode
  # bump_build_number

  ## Do the bundle of the application
  build_android_release_bundle

  ## Upload Android App Bundle to PlayStore like Internal testing Release
  upload_to_play_store(
    release_status: "draft", ## <http://docs.fastlane.tools/actions/upload_to_play_store/#parameters>
    skip_upload_apk: true,
    version_name: $package["version"],
  )
end

def sendSlack(message, success)
  slack(
    slack_url: $slack_url,
    message: message,
    success: success,
    payload: {
      "Build Date" => Time.new.to_s,
      "Built by" => "KO",
    },
    default_payloads: [:git_branch, :git_author],
    attachment_properties: {
      fields: [{
 # title: "My Field",
               # value: "My Value",
               # short: true
        }],
    },
  )
end

# after_all do
#   sendSlack("App successfully built!", true)
# end

# error do
#   sendSlack("App build failed!", false)
# end
