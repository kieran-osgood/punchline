jobs:
  checkout_code:
    executor: rn/linux_js
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: git submodule update --init --recursive
      - persist_to_workspace:
          paths: .
          root: .

  configure_fastlane: 
    executor: rn/linux_js
    steps:
      - run:
          name: Setup Environment variables for fastlane
          command: |
            export LC_ALL=en_US.UTF-8
            export LANG=en_US.UTF-8

  analyse_js:
    executor: rn/linux_js
    parallelism: 5
    steps:
      - attach_workspace:
          at: .
      - rn/yarn_install
      - run:
          name: Jest
          command: |
            TESTS=$(circleci tests glob "app/**/*.test.{ts,tsx}" | circleci tests split)
            yarn ci:test:jest --findRelatedTests $TESTS

  update_homebrew:
    executor: rn/macos
    steps:
      - run:
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew update
          name: Update Homebrew
      - persist_to_workspace:
          paths: .
          root: .

  decrypt_keystore_and_move:
    executor: rn/linux_js 
    steps:
      - attach_workspace:
          at: .
      - run: 
          command: ls android/app
      - run: gpg -d --pinentry-mode loopback --batch --yes --passphrase="$ENCRYPTION_PASSPHRASE" --output android/app/punchline.keystore --decrypt android/app/punchline-keys/punchline.keystore.gpg
      - run: cp android/app/punchline.keystore android/fastlane/release.keystore 
           
  fastlane_build_release_android:
    executor: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      # - configure_fastlane
      - rn/yarn_install
      - run:
          command: echo
          name: |
            bundle install
            bundle exec fastlane build_android

  fastlane_build_release_ios:
    macos:
      xcode: 12.4.0
    steps:
      - checkout
      - rn/yarn_install
      - run: 
          working_directory: ios
          no_output_timeout: 30m
          command: |
            bundle install
            # pod deintegrate
            pod install
            bundle exec fastlane build_ios

      - store_artifacts:
          path: ios/output

orbs:
  rn: react-native-community/react-native@5.1.0
version: 2.1
workflows:
  main:
    jobs: 
      # Checkout the code and persist to the Workspace
      - checkout_code:
          filters:
            branches:
              only:
                - master
                - feature/circle-fastlane-init
              ignore:
                - develop
            tags:
              only: /^v.*/
      # Analyze the Javascript using ESLint, and Jest
      # - analyse_js:
      #     requires:
      #       - checkout_code

      # - update_homebrew:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #           - feature/circle-fastlane-init
      #         ignore:
      #           - develop
      #       tags:
      #         only: /^v.*/

      # Build the Android app in debug mode
      # - rn/android_build:
      #     yarn_cache: false
      #     name: build_android_debug
      #     project_path: "android"
      #     build_type: debug
      #     requires:
      #       - analyse_js

      # Build and test the Android app in release mode
      # Note: We split these into seperate jobs because we can build the Android app on a Linux machine and preserve the expensive MacOS executor minutes for when it's required
      # - rn/android_build:
      #     yarn_cache: false
      #     name: build_android_release
      #     project_path: "android"
      #     build_type: release
      #     requires:
      #       - analyse_js
      # - rn/android_test:
      #     yarn_cache: false
      #     detox_configuration: "android.emu.release"
      #     requires:
      #       - build_android_release
      
      # Build and test the iOS app in release mode
      # - rn/ios_build_and_test:
      #     yarn_cache: false
      #     xcodebuild_cache: false
      #     homebrew_cache: false
      #     project_type: "workspace"
      #     project_path: "ios/punchline.xcworkspace"
      #     device: "iPhone 11"
      #     build_configuration: "Release"
      #     scheme: "punchline"
      #     detox_configuration: "ios.sim.release"
      #     requires:
      #       - checkout_code
      #       - analyse_js
      #       - update_homebrew

      - configure_fastlane:
          requires:
            - checkout_code

      - decrypt_keystore_and_move:
          requires:
            - checkout_code

      - fastlane_build_release_android:
          requires:
              - configure_fastlane
              - decrypt_keystore_and_move

      # - fastlane_android_release:
          # requires:
            # - rn/android_test
      # - fastlane_build_release_ios
