
orbs:
  rn: react-native-community/react-native@5.1.0
  ruby: circleci/ruby@1.1.2
version: 2.1

jobs:
  checkout_code:
    executor: rn/linux_js
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: 
          name: Git submodule update
          command: git submodule update --init --recursive
      - persist_to_workspace:
          paths: .
          root: .

  configure_fastlane_android: 
    executor: rn/linux_android
    steps:
      - rn/yarn_install
      - ruby/install:
          version: '2.7'
      - run:
          name: Setup Environment variables for fastlane
          command: |
            export LC_ALL=en_US.UTF-8
            export LANG=en_US.UTF-8
            gem install bundler
            bundle install

  configure_fastlane_e2e: 
    executor: rn/linux_android
    steps:
      - rn/yarn_install
      - ruby/install:
          version: '2.7'
      - run:
          name: Setup Environment variables for fastlane
          command: |
            export LC_ALL=en_US.UTF-8
            export LANG=en_US.UTF-8
            gem install bundler
            bundle install

  analyse_js:
    executor: rn/linux_js
    parallelism: 5
    steps:
      - attach_workspace:
          at: .
      - rn/yarn_install
      - run:
          name: Jest
          command: |
            TESTS=$(circleci tests glob "app/**/*.test.{ts,tsx}" | circleci tests split)
            yarn ci:test:jest --findRelatedTests $TESTS

  update_homebrew:
    executor: rn/macos
    steps:
      - run:
          name: Update homebrew
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew update
      - persist_to_workspace:
          paths: .
          root: .

  decrypt_keystore_and_move:
    executor: rn/linux_js 
    steps:
      - attach_workspace:
          at: .
      - run: 
          command: ls android/app
      - run: 
          name: Decrypt keystore file
          command: gpg -d --pinentry-mode loopback --batch --yes --passphrase="$ENCRYPTION_PASSPHRASE" --output android/app/punchline.keystore --decrypt android/app/punchline-keys/punchline.keystore.gpg
      - run: 
          name: Copy keystore to fastlane directory
          command: cp android/app/punchline.keystore android/fastlane/release.keystore 
      
  fastlane_build_debug_android:
    executor: rn/linux_android
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Fastlane Build Debug - Android"
          working_directory: android
          no_output_timeout: 30m
          command: |
            bundle exec fastlane build_android_debug
      - store_artifacts:
          path: android/app/build/outputs/apk/release
     
  fastlane_build_release_android:
    executor: rn/linux_android
    steps:
      - attach_workspace:
          at: .
      - ruby/install:
          version: '2.7'
      - run:
          name: "Fastlane Build Release - Android"
          working_directory: android
          no_output_timeout: 30m
          command: |
            bundle exec fastlane build_android_release
      - persist_to_workspace:
          root: .
          paths: .
      - store_artifacts:
          path: android/app/build/outputs/apk/release

  fastlane_e2e_android:
    executor: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - ruby/install:
          version: '2.7'
      - run:
          name: "Fastlane Build Release - Android"
          working_directory: android
          no_output_timeout: 30m
          command: |
            bundle exec fastlane e2e_release
            
  # fastlane_build_release_ios:
  #   macos:
  #     xcode: 12.4.0
  #   steps:
  #     - checkout
  #     - run: 
  #         name: "Fastlane Build Release - iOS"
  #         working_directory: ios
  #         no_output_timeout: 30m
  #         command: |
  #           # pod install
  #           bundle exec fastlane build_ios
  #     - store_artifacts:
  #         path: ios/output

  my_test:
    executor: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - run: echo "stuff" > test.txt
      - store_artifacts:
          path: tmp

  my_second_test:
    executor: rn/linux_android
    steps:
      - attach_workspace:
          at: .
      - run: ls -a

workflows:
  test:
      jobs:
        - my_test
        - my_second_test
  # develop:
  #   jobs: 
  #     # Checkout the code and persist to the Workspace
  #     - checkout_code:
  #         filters:
  #           branches:
  #             only:
  #               - develop
      
  #     # Analyze the Javascript using ESLint, and Jest
  #     - analyse_js:
  #         filters:
  #           branches:
  #             only:
  #               - develop
  #         requires:
  #           - checkout_code

  #     - update_homebrew:
  #         filters:
  #           branches:
  #             only:
  #               - develop

  #     # Build the Android app in debug mode
  #     - rn/android_build:
  #         yarn_cache: false
  #         name: build_android_debug
  #         project_path: "android"
  #         build_type: debug
  #         requires:
  #           - analyse_js

  #     - decrypt_keystore_and_move:
  #         requires:
  #           - checkout_code

  #     # Build and test the Android app in release mode
  #     # Note: We split these into seperate jobs because we can build the Android app on a Linux machine and preserve the expensive MacOS executor minutes for when it's required
  #     - rn/android_build:
  #         name: build_android_release
  #         yarn_cache: false
  #         project_path: "android"
  #         build_type: release
  #         requires:
  #           - analyse_js

  #     - fastlane_e2e_android:
  #         requires:
  #           - build_android_release

  #     # Build and test the iOS app in release mode
  #     # - rn/ios_build_and_test:
  #     #     yarn_cache: false
  #     #     xcodebuild_cache: false
  #     #     homebrew_cache: false
  #     #     project_type: "workspace"
  #     #     project_path: "ios/punchline.xcworkspace"
  #     #     device: "iPhone 11"
  #     #     build_configuration: "Release"
  #     #     scheme: "punchline"
  #     #     detox_configuration: "ios.sim.release"
  #     #     requires:
  #     #       - checkout_code
  #     #       - analyse_js
  #     #       - update_homebrew

  # master:
  #   jobs: 
  #     # Checkout the code and persist to the Workspace
  #     - checkout_code:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #           tags:
  #             only: /^v.*/
      
  #     - update_homebrew:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #           tags:
  #             only: /^v.*/

  #     # Analyze the Javascript using ESLint, and Jest
  #     - analyse_js:
  #         requires:
  #           - checkout_code

  #     - decrypt_keystore_and_move:
  #         requires:
  #           - checkout_code

  #     # This configures the rn/linux_js for building android
  #     - configure_fastlane_android:
  #         requires:
  #           - analyse_js
  #     # This configures the rn/linux_js for e2e testing
  #     - configure_fastlane_e2e:
  #         requires:
  #           - analyse_js

  #     - fastlane_build_release_android:
  #         requires:
  #             - configure_fastlane_android
  #             - decrypt_keystore_and_move
  #             - configure_fastlane_android
  #             - configure_fastlane_e2e
  #     - fastlane_e2e_android:
  #         requires:
  #             - fastlane_build_release_android
  #             - configure_fastlane_android
  #             - configure_fastlane_e2e

  #     # Build and test the iOS app in release mode
  #     # - rn/ios_build_and_test:
  #     #     yarn_cache: false
  #     #     xcodebuild_cache: false
  #     #     homebrew_cache: false
  #     #     project_type: "workspace"
  #     #     project_path: "ios/punchline.xcworkspace"
  #     #     device: "iPhone 11"
  #     #     build_configuration: "Release"
  #     #     scheme: "punchline"
  #     #     detox_configuration: "ios.sim.release"
  #     #     requires:
  #     #       - checkout_code
  #     #       - analyse_js
  #     #       - update_homebrew


  #     # - fastlane_build_release_ios:
  #     #     requires:
  #     #         - configure_fastlane_android
  #     #         - decrypt_keystore_and_move
  #     #         - rn/ios_build_and_test
