jobs:
  checkout_code:
    executor: rn/linux_js
    steps:
      - checkout
      - persist_to_workspace:
          paths: .
          root: .
  
  analyse_js:
    executor: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - rn/yarn_install
      - run:
          name: Jest
          command: |
            mkdir -p test-results/jest
            npm run ci:test:jest

  update_homebrew:
    executor: rn/macos
    steps:
      - run:
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew update
          name: Update Homebrew
      - persist_to_workspace:
          paths: .
          root: .
           
  fastlane_android_release:
    executor: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - run: npm i
      - run:
          command: echo
          name: Run Fastlane
          
  fastlane_ios_release:
    executor: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - run: npm i
      - run:
          command: echo 1
          name: Run Fastlane

orbs:
  rn: react-native-community/react-native@5.1.0
version: 2.1
workflows:
  test:
    jobs:
      # Checkout the code and persist to the Workspace
      # Note: This is a job which is defined above and not part of the Orb
      - checkout_code

      # Analyze the Javascript using ESLint, and Jest
      # Note: This is a job which is defined above and not part of the Orb
      # - analyse_js:
      #     requires:
      #       - checkout_code

      - update_homebrew

      # Build the Android app in debug mode
      # - rn/android_build:
      #     yarn_cache: false
      #     name: build_android_debug
      #     project_path: "android"
      #     build_type: debug
      #     requires:
      #       - analyse_js

      # Build and test the Android app in release mode
      # Note: We split these into seperate jobs because we can build the Android app on a Linux machine and preserve the expensive MacOS executor minutes for when it's required
      # - rn/android_build:
      #     yarn_cache: false
      #     name: build_android_release
      #     project_path: "android"
      #     build_type: release
      #     requires:
      #       - analyse_js
      # - rn/android_test:
      #     yarn_cache: false
      #     detox_configuration: "android.emu.release"
      #     requires:
      #       - build_android_release
      
      # Build and test the iOS app in release mode
      - rn/ios_build_and_test:
          # yarn_cache: false
          xcodebuild_cache: false
          # homebrew_cache: false
          project_path: "ios/punchline.xcworkspace"
          device: "iPhone 11"
          build_configuration: "Release"
          scheme: "punchline"
          detox_configuration: "ios.sim.release"
          requires:
            # - analyse_js
            - update_homebrew