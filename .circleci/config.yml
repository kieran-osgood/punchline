
orbs:
  rn: react-native-community/react-native@5.1.0
  ruby: circleci/ruby@1.1.2
  android: circleci/android@1.0.3
version: 2.1

jobs:
  checkout_code:
    executor: rn/linux_js
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: 
          name: Git submodule update
          command: git submodule update --init --recursive
      - persist_to_workspace:
          paths: .
          root: .

  analyse_js:
    executor: rn/linux_android
    # parallelism: 5
    steps:
      - attach_workspace:
          at: .
      - rn/yarn_install
      - run:
          name: Jest
          command: |
            TESTS=$(circleci tests glob "app/**/*.test.{ts,tsx}" | circleci tests split)
            yarn ci:test:jest --findRelatedTests $TESTS
      - persist_to_workspace:
          paths: .
          root: .

  decrypt_keystore_and_move:
    executor: rn/linux_android 
    steps:
      - attach_workspace:
          at: .
      - run: 
          name: Decrypt keystore file
          command: gpg -d --pinentry-mode loopback --batch --yes --passphrase="$ENCRYPTION_PASSPHRASE" --output android/app/punchline.keystore --decrypt android/app/punchline-keys/punchline.keystore.gpg
      - run: 
          name: Copy keystore to fastlane directory
          command: cp android/app/punchline.keystore android/fastlane/release.keystore 
      - persist_to_workspace:
          paths: .
          root: .
      
  fastlane_build_debug_android:
    executor: rn/linux_android
    resource_class: medium+
    steps:
      - attach_workspace:
          at: .
      # - run: yarn add global detox-cli@18.13.0
      # - android/create-avd:
      #     avd-name: Android30Avd
      #     install: true
      #     system-image: system-images;android-29;default;x86
      - run:
          name: "Fastlane Build Debug - Android"
          working_directory: android
          no_output_timeout: 30m
          command: |
            export LC_ALL=en_US.UTF-8
            export LANG=en_US.UTF-8
            gem install bundler
            bundle install
            bundle exec fastlane build_android_debug
            # # bundle exec fastlane e2e_debug
      - store_artifacts:
          path: android/app/build/outputs/apk/debug
     
  fastlane_build_release_android:
    executor: rn/linux_android
    resource_class: medium+
    steps:
      - attach_workspace:
          at: .
      - rn/yarn_install
      - run:
          name: "Fastlane Build Release - Android"
          working_directory: android
          no_output_timeout: 30m
          command: |
            export LC_ALL=en_US.UTF-8
            export LANG=en_US.UTF-8
            gem install bundler
            bundle install
            bundle exec fastlane build_android_release_bundle
      - store_artifacts:
          path: android/app/build/outputs/bundle/release

  fastlane_build_release_ios:
    macos:
      xcode: 12.4.0
    steps:
      - checkout
      - run: 
          name: "Fastlane Build Release - iOS"
          working_directory: ios
          no_output_timeout: 30m
          command: |
            bundle exec fastlane build_ios
      - store_artifacts:
          path: ios/output
  test:
    executor:
      name: android/android-machine
      resource-class: large
    steps:
      - checkout
      - android/create-avd:
          avd-name: android_29_avd
          install: true
          system-image: system-images;android-29;default;x86
      - android/start-emulator:
          avd-name: android_29_avd
          no-window: true
          restore-gradle-cache-prefix: v1a
      - run: 
          name: "Fastlane Build Release - Android"
          working_directory: android
          no_output_timeout: 30m
          command: |
            bundle exec fastlane e2e_debug
      - android/save-gradle-cache:
          cache-prefix: v1a

workflows:
  develop:
    jobs: 
      # Checkout the code and persist to the Workspace
      - checkout_code:
          filters:
            branches:
              only:
                - develop
                - feature/circle-fastlane-init
      # TESTING
      # - fastlane_build_debug_android:
          # requires:
      #         - checkout_code
      - test:
          requires: 
              - checkout_code
      # TESTING

      # # Analyze the Javascript using ESLint, and Jest
      # - analyse_js:
      #     requires:
      #       - checkout_code
      # - decrypt_keystore_and_move:
      #     requires:
      #       - checkout_code
      # # Builds debug android apk
      # - fastlane_build_debug_android:
      #     requires:
      #         - checkout_code
      #         - analyse_js
      # # Builds android aab
      # - fastlane_build_release_android:
      #     requires:
      #         - decrypt_keystore_and_move
      #         - fastlane_build_debug_android
      # # Build and test the iOS app in release mode
      # - rn/ios_build_and_test:
      #     yarn_cache: false
      #     xcodebuild_cache: false
      #     homebrew_cache: false
      #     project_type: "workspace"
      #     project_path: "ios/punchline.xcworkspace"
      #     device: "iPhone 11"
      #     build_configuration: "Release"
      #     scheme: "punchline"
      #     detox_configuration: "ios.sim.release"
      #     requires:
      #       - checkout_code
      #       - analyse_js

  # master:
  #   jobs: 
  #     # Checkout the code and persist to the Workspace
  #     - checkout_code:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #           tags:
  #             only: /^v.*/
      
  #     - update_homebrew:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #           tags:
  #             only: /^v.*/

  #     # Analyze the Javascript using ESLint, and Jest
  #     - analyse_js:
  #         requires:
  #           - checkout_code

  #     - decrypt_keystore_and_move:
  #         requires:
  #           - checkout_code

  #     # This configures the rn/linux_js for building android
  #     - configure_fastlane_android:
  #         requires:
  #           - analyse_js
  #     # This configures the rn/linux_js for e2e testing
  #     - configure_fastlane_e2e:
  #         requires:
  #           - analyse_js

  #     - fastlane_build_release_android:
  #         requires:
  #             - configure_fastlane_android
  #             - decrypt_keystore_and_move
  #             - configure_fastlane_e2e

  #     - fastlane_e2e_android:
  #         requires:
  #             - fastlane_build_release_android
  #             - configure_fastlane_android
  #             - configure_fastlane_e2e

  #     # Build and test the iOS app in release mode
  #     # - rn/ios_build_and_test:
  #     #     yarn_cache: false
  #     #     xcodebuild_cache: false
  #     #     homebrew_cache: false
  #     #     project_type: "workspace"
  #     #     project_path: "ios/punchline.xcworkspace"
  #     #     device: "iPhone 11"
  #     #     build_configuration: "Release"
  #     #     scheme: "punchline"
  #     #     detox_configuration: "ios.sim.release"
  #     #     requires:
  #     #       - checkout_code
  #     #       - analyse_js
  #     #       - update_homebrew

  #     # - fastlane_build_release_ios:
  #     #     requires:
  #     #         - configure_fastlane_android
  #     #         - decrypt_keystore_and_move
  #     #         - rn/ios_build_and_test
