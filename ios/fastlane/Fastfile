# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
default_platform(:ios)
# Retrieve version of my app in package.json (React Native case)
$package = load_json(json_path: "../package.json")
$slack_url = "https://hooks.slack.com/services/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"
before_all do
  setup_circle_ci
end

lane :bump_and_commit_versions do
  increment_build_number(xcodeproj: "punchline.xcodeproj")
  increment_version_number_in_plist(
    version_number: $package["version"],
  )
  commit_version_bump(
    message: "[fastlane] Version Bump", # create a commit with a custom message
  )
end

lane :generate_new_icons do
  ## Generates the app icons - splash screen icons are handled by bootsplash (`yarn bootsplash`)
  appicon(
    appicon_devices: [:iphone, :ipad],
    appicon_path: "generated/app-icons.xcassets", # output path
    # `appicon_image_file` defaults to "fastlane/metadata/app_icon.png"
  )
end

desc "Builds a release and pushes to testflight"
lane :beta do
  # get_certificates           # invokes cert
  # get_provisioning_profile   # invokes sigh
  bump_and_commit_versions

  # Get latest certs appstore
  match(type: "appstore") # Set type of code signing required
  gym(export_method: "app-store", output_directory: "output") # Directory where signed .ipa file will be placed
  api_key = app_store_connect_api_key(
    key_id: "LXL29858RV",
    issuer_id: "d76715a4-757f-468f-9a52-7c0cc2b62b08",
    key_filepath: "./fastlane/AuthKey_LXL29858RV.p8",
    duration: 1200, # optional (maximum 1200)
    in_house: false, # optional but may be required if using match/sigh
  )

  # if changelog
  #   upload_to_testflight(changelog: changelog)
  # else
  #   upload_to_testflight
  # end

  pilot(api_key: api_key)
end

desc "Run tests and build the app"
lane :build_appstore_ios do
  bump_and_commit_versions

  # Get latest certs appstore
  match(type: "appstore", readonly: is_ci) # Set type of code signing required
  # Gym aliases build_app
  gym(export_method: "appstore", output_directory: "output") # Directory where signed .ipa file will be placed
end

lane :e2e_release do
  Dir.chdir "../.." do # Navigate to the root of the project where the Detox files are placed.
    sh("detox build --configuration ios.sim.release")
    sh("detox test --configuration ios.sim.release --cleanup")
  end
end

# after_all do
#   slack(
#     slack_url: $slack_url,
#     message: "App successfully built!",
#     payload: {
#       "Build Date" => Time.new.to_s,
#       "Built by" => "KO",
#     },
#     default_payloads: [:git_branch, :git_author],
#     attachment_properties: {
#       fields: [{
#         # title: "My Field",
#         # value: "My Value",
#         # short: true
#       }]
#     }
#   )
# end

# error do
#   slack(
#     slack_url: $slack_url,
#     success: false,
#     message: "App build failed!",
#     payload: {
#       "Build Date" => Time.new.to_s,
#       "Built by" => "KO",
#     },
#     default_payloads: [:git_branch, :git_author],
#     attachment_properties: {
#       fields: [{
#         # title: "My Field",
#         # value: "My Value",
#         # short: true
#       }]
#     }
#   )
#   end
